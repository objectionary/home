# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang
+tests
+version 0.36.0

# Equal to.
[] > positive-infinity-is-equal-to-one-div-zero
  eq. > @
    positive-infinity
    1.0.div 0.0

# Test.
[] > positive-infinity-eq-positive-infinity
  eq. > @
    positive-infinity
    positive-infinity

# Test.
[] > positive-infinity-not-eq-negative-infinity
  not. > @
    eq.
      positive-infinity
      negative-infinity

# Test.
[] > positive-infinity-not-eq-nan
  not. > @
    eq.
      positive-infinity
      nan

# Test.
[] > positive-infinity-not-eq-int
  not. > @
    eq.
      positive-infinity
      42

# Test.
[] > positive-infinity-not-eq-float
  not. > @
    eq.
      positive-infinity
      42.5

# Less than.
[] > positive-infinity-lt-positive-infinity
  eq. > @
    positive-infinity.lt positive-infinity
    FALSE

# Test.
[] > positive-infinity-not-lt-negative-infinity
  eq. > @
    positive-infinity.lt negative-infinity
    FALSE

# Test.
[] > positive-infinity-not-lt-nan
  eq. > @
    positive-infinity.lt nan
    FALSE

# Test.
[] > positive-infinity-not-lt-int
  eq. > @
    positive-infinity.lt 42
    FALSE

# Test.
[] > positive-infinity-not-lt-float
  eq. > @
    positive-infinity.lt 42.5
    FALSE

# Less or equal than.
[] > positive-infinity-lte-positive-infinity
  eq. > @
    positive-infinity.lte positive-infinity
    TRUE

# Test.
[] > positive-infinity-not-lte-negative-infinity
  eq. > @
    positive-infinity.lte negative-infinity
    FALSE

# Test.
[] > positive-infinity-not-lte-nan
  eq. > @
    positive-infinity.lte nan
    FALSE

# Test.
[] > positive-infinity-not-lte-int
  eq. > @
    positive-infinity.lte 42
    FALSE

# Test.
[] > positive-infinity-not-lte-float
  eq. > @
    positive-infinity.lte 42.5
    FALSE

# Greater than.
[] > positive-infinity-gt-positive-infinity
  not. > @
    gt.
      positive-infinity
      positive-infinity

# Test.
[] > positive-infinity-gt-negative-infinity
  gt. > @
    positive-infinity
    negative-infinity

# Test.
[] > positive-infinity-not-gt-nan
  not. > @
    gt.
      positive-infinity
      nan

# Test.
[] > positive-infinity-gt-int
  gt. > @
    positive-infinity
    42

# Test.
[] > positive-infinity-gt-float
  gt. > @
    positive-infinity
    42.5

# Greater or equal than.
[] > positive-infinity-gte-positive-infinity
  eq. > @
    positive-infinity.gte positive-infinity
    TRUE

# Test.
[] > positive-infinity-gte-negative-infinity
  eq. > @
    positive-infinity.gte negative-infinity
    TRUE

# Test.
[] > positive-infinity-not-gte-nan
  eq. > @
    positive-infinity.gte nan
    FALSE

# Test.
[] > positive-infinity-gte-int
  eq. > @
    positive-infinity.gte 42
    TRUE

# Test.
[] > positive-infinity-gte-float
  eq. > @
    positive-infinity.gte 42.5
    TRUE

# Test.
[] > float-equal-to-nan-and-infinites-is-false-highload
  negative-infinity > neg-inf
  eq. > @
    and.
      and.
        and.
          and.
            and.
              and.
                and.
                  and.
                    and.
                      and.
                        and.
                          (0.0.eq nan).eq FALSE
                          (0.0.eq positive-infinity).eq FALSE
                        (0.0.eq neg-inf).eq FALSE
                      (42.5.eq nan).eq FALSE
                    (42.5.eq positive-infinity).eq FALSE
                  (42.5.eq neg-inf).eq FALSE
                (0.0.eq nan).eq FALSE
              (0.0.eq positive-infinity).eq FALSE
            (0.0.eq neg-inf).eq FALSE
          (42.5.eq nan).eq FALSE
        (42.5.eq positive-infinity).eq FALSE
      (42.5.eq neg-inf).eq FALSE
    TRUE

# Times.
# Test.
[] > positive-infinity-times-float-zero
  eq. > @
    as-bytes.
      positive-infinity.times 0.0
    nan.as-bytes

# Test.
[] > positive-infinity-times-neg-float-zero
  eq. > @
    as-bytes.
      positive-infinity.times -0.0
    nan.as-bytes

# Test.
[] > positive-infinity-times-int-zero
  eq. > @
    as-bytes.
      positive-infinity.times 0
    nan.as-bytes

# Test.
[] > positive-infinity-times-nan
  eq. > @
    as-bytes.
      positive-infinity.times nan
    nan.as-bytes

# Test.
[] > positive-infinity-times-negative-infinity
  negative-infinity > neg-inf
  eq. > @
    positive-infinity.times neg-inf
    neg-inf

# Test.
[] > positive-infinity-times-positive-infinity
  eq. > @
    positive-infinity.times positive-infinity
    positive-infinity

# Test.
[] > positive-infinity-times-positive-float
  eq. > @
    positive-infinity.times 42.5
    positive-infinity

# Test.
[] > positive-infinity-times-positive-int
  eq. > @
    positive-infinity.times 42
    positive-infinity

# Test.
[] > positive-infinity-times-negative-float
  eq. > @
    positive-infinity.times -42.5
    negative-infinity

# Test.
[] > positive-infinity-times-negative-int
  eq. > @
    positive-infinity.times -42
    negative-infinity

# Plus
# Test.
[] > positive-infinity-plus-nan
  eq. > @
    as-bytes.
      positive-infinity.plus nan
    nan.as-bytes

# Test.
[] > positive-infinity-plus-negative-infinity
  eq. > @
    as-bytes.
      positive-infinity.plus negative-infinity
    nan.as-bytes

# Test.
[] > positive-infinity-plus-positive-infinity
  eq. > @
    positive-infinity.plus positive-infinity
    positive-infinity

# Test.
[] > positive-infinity-plus-positive-float
  eq. > @
    positive-infinity.plus 42.5
    positive-infinity

# Negation
# Test.
[] > positive-infinity-neg-is-negative-infinity
  eq. > @
    positive-infinity.neg
    negative-infinity

# Minus
# Test.
[] > positive-infinity-minus-nan
  eq. > @
    as-bytes.
      positive-infinity.minus nan
    nan.as-bytes

# Test.
[] > positive-infinity-minus-positive-infinity
  eq. > @
    as-bytes.
      positive-infinity.minus positive-infinity
    nan.as-bytes

# Test.
[] > positive-infinity-minus-negative-infinity
  eq. > @
    positive-infinity.minus negative-infinity
    positive-infinity

# Test.
[] > positive-infinity-minus-positive-float
  eq. > @
    positive-infinity.minus 42.5
    positive-infinity

# Test.
[] > positive-infinity-minus-positive-int
  eq. > @
    positive-infinity.minus 42
    positive-infinity

# Test.
[] > positive-infinity-minus-negative-float
  eq. > @
    positive-infinity.minus -42.5
    positive-infinity

# Test.
[] > positive-infinity-minus-negative-int
  eq. > @
    positive-infinity.minus -42
    positive-infinity

# Division
# Test.
[] > positive-infinity-div-float-zero
  eq. > @
    positive-infinity.div 0.0
    positive-infinity

# Test.
[] > positive-infinity-div-neg-float-zero
  eq. > @
    positive-infinity.div -0.0
    negative-infinity

# Test.
[] > positive-infinity-div-int-zero
  eq. > @
    positive-infinity.div 0
    positive-infinity

# Test.
[] > positive-infinity-div-neg-int-zero
  eq. > @
    positive-infinity.div -0
    positive-infinity

# Test.
[] > positive-infinity-div-nan
  eq. > @
    as-bytes.
      positive-infinity.div nan
    nan.as-bytes

# Test.
[] > positive-infinity-div-negative-infinity
  eq. > @
    as-bytes.
      positive-infinity.div negative-infinity
    nan.as-bytes

# Test.
[] > positive-infinity-div-positive-infinity
  eq. > @
    as-bytes.
      positive-infinity.div positive-infinity
    nan.as-bytes

# Test.
[] > positive-infinity-div-positive-float
  eq. > @
    positive-infinity.div 42.5
    positive-infinity

# Test.
[] > positive-infinity-div-positive-int
  eq. > @
    positive-infinity.div 42
    positive-infinity

# Test.
[] > positive-infinity-div-negative-float
  eq. > @
    positive-infinity.div -42.5
    negative-infinity

# Test.
[] > positive-infinity-div-negative-int
  eq. > @
    positive-infinity.div -42
    negative-infinity

# Bytes.
# Test.
[] > positive-infinity-as-bytes-is-valid
  eq. > @
    positive-infinity.as-bytes
    (1.0.div 0.0).as-bytes
