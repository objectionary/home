# MIT License
#
# Copyright (c) 2020-2022 Graur Andrew
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.hamcrest.assert-that
+home https://github.com/objectionary/eo-hamcrest
+junit
+package org.eolang.hamcrest.failed-output
+version 0.3.2

[] > simple-starts-with-string-failed
  [] > suggestion
    assert-that > @
      "Привет, 世界"
      $.string-starts-with "界"
      "string-starts-with 界"
  assert-that > @
    suggestion
    $.equal-to "string-starts-with 界\nExpected: string starts with: <界>\n     but: was <Привет, 世界>"

[] > starts-with-any-of-string-failed
  [] > suggestion
    assert-that > @
      "Привет, 世界"
      $.all-of
        $.contains-string "Привет"
        $.contains-string "世"
        $.string-starts-with "ет"
      "starts-with"
  assert-that > @
    suggestion
    $.equal-to "starts-with\nExpected: string contains: <Привет> and string contains: <世> and string starts with: <ет>\n     but: a value was <Привет, 世界>"

[] > starts-with-all-of-string-failed
  [] > suggestion
    assert-that > @
      "ffffffffffff"
      $.any-of
        $.contains-string "Привет"
        $.string-starts-with "dddd"
        $.contains-string "界"
      "starts-with"
  assert-that > @
    suggestion
    $.equal-to "starts-with\nExpected: string contains: <Привет> or string starts with: <dddd> or string contains: <界>\n     but: a value was <ffffffffffff>"




