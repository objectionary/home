# MIT License
#
# Copyright (c) 2020-2022 Graur Andrew
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.hamcrest.assert-that
+alias org.eolang.math.number
+home https://github.com/objectionary/eo-hamcrest
+junit
+package org.eolang.hamcrest.failed-output
+version 0.3.0

[] > any-of-number-test-failed-output
  [] > suggestion
    assert-that > @
      150.minus 50
      $.any-of
        $.equal-to 1
  assert-that > @
    suggestion
    $.equal-to "\nExpected: <1> equal to value\n     but: a value was <100>"

[] > any-of-several-failed-output
  [] > suggestion
    assert-that > @
      3.times 1
      $.any-of
        $.equal-to 1
        $.greater-than 100
        $.less-than -6
  assert-that > @
    suggestion
    $.equal-to "\nExpected: <1> equal to value or <100> less than value or <-6> greater than value\n     but: a value was <3>"

[] > any-of-close-to-failed-output
  nop > @
    [] > suggestion
      assert-that > @
        42.0
        $.any-of
          $.equal-to
            number 1
            .as-float
          $.greater-than 100.0
          $.close-to 20.0 2.2
        "any of conditions"
    assert-that
      suggestion
      $.equal-to "any of conditions\nExpected: <1.0> equal to value or <100.0> less than value or a numeric value within <20.0> of <2.2>\n     but: a value was <42.0>"
