# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.range
+alias org.eolang.collections.list
+alias org.eolang.hamcrest.assert-that
+home https://github.com/objectionary/eo-collections
+package org.eolang.collections
+tests
+version 0.10.2

[] > simple-range
  range > rng!
    []
      [i] > build
        i > @!
        build (@.plus 1) > next
      build 1 > @
    10
  assert-that > @
    list rng
    $.equal-to
      list
        * 1 2 3 4 5 6 7 8 9

[] > range-with-floats
  range > rng!
    []
      [i] > x
        i > @!
        x (@.plus 0.5) > next
      x 1.0 > @
    5.0
  assert-that > @
    list rng
    $.equal-to
      list
        * 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5

[] > range-with-out-of-bounds
  range > rng!
    []
      [num] > b
        num > @!
        b (@.plus 5) > next
      b 1 > @
    10
  assert-that > @
    list rng
    $.equal-to
      list
        * 1 6

[] > range-with-complex-items
  [pair] > comparable-pair
    pair > @!
    [x] > lt
      lt. > @
        ^.at 0
        x.at 0
    comparable-pair > next
      *
        (@.at 0).plus 1
        (@.at 1).plus 1
  range > rng!
    comparable-pair
      * 1 2
    * 5
  assert-that > @
    list rng
    $.equal-to
      list
        *
          list (* 1 2)
          list (* 2 3)
          list (* 3 4)
          list (* 4 5)

[] > range-with-wrong-items-is-an-empty-array
  range > rng!
    []
      [num] > y
        num > @
        [] > next
      y 10 > @
    1
  assert-that > @
    (list rng).is-empty
    $.equal-to TRUE
