# MIT License
#
# Copyright (c) 2022 Eugene Darashkevich
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.list
+alias org.eolang.collections.map
+alias org.eolang.hamcrest.assert-that
+home https://github.com/objectionary/eo-collections
+junit
+package org.eolang.collections
+version 0.0.8

[] > map-find-do-not-crashed
  map * > mp!
  mp.found 1 > res!
  assert-that > @
    res.length
    $.equal-to 0

[] > map-find-works
  map > mp!
    *
      *
      * (* 4 "a")
      * (* 2 "c") (* 8 "c")
  mp.found 2 > r2!
  mp.found 3 > r3!
  mp.found 4 > r4!
  mp.found 8 > r8!
  assert-that > @
    * (r2.at 0) (r3.length) (r4.at 0) (r8.at 0)
    $.equal-to
      list
        * "c" 0 "a" "c"

[] > map-find-and-with
  map * > init-mp!
  init-mp.with 1 "a" > mp!
  assert-that > @
    (mp.found 1).at 0
    $.equal-to "a"

# This test has been temporarily disabled
[] > map-of-map
  map * > init-mp!
  init-mp.with "c" "d" > mp1!
  init-mp.with 1 mp1 > mp-res!
  nop > @
    (((mp-res.found 1).at 0).found "c").at 0
    $.equal-to "d"

[] > map-without-works
  map * > init-mp!
  (init-mp.with 1 "a").with 2 "b" > mp!
  mp.without 2 > mp2!
  assert-that > @
    * ((mp2.found 1).length) ((mp2.found 2).length)
    $.equal-to
      list
        * 1 0

[] > map-without-many-elements
  map * > init-mp!
  ((init-mp.with 1 "a").with 2 "b").with 1 "c" > mp!
  mp.without 1 > mp2!
  assert-that > @
    * (mp.size) (mp2.size) ((mp.found 1).at 0)
    $.equal-to
      list
        * 2 1 "c"

[] > map-keys-test
  ((map *).with 11 "a").with 5 "b" > mp!
  assert-that > @
    times.
      (mp.keys).at 0
      (mp.keys).at 1
    $.equal-to 55

[] > map-contains-key
  ((map *).with 11 "a").with 5 "b" > mp!
  assert-that > @
    contains-key.
      mp
      11
    $.equal-to TRUE

[] > map-do-not-contains-key
  ((map *).with 11 "a").with 5 "b" > mp!
  assert-that > @
    contains-key.
      mp
      12
    $.equal-to FALSE
