# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.fs.dir
+alias org.eolang.fs.tmpdir
+alias org.eolang.hamcrest.assert-that
+alias org.eolang.io.bytes-as-input
+alias org.eolang.io.copied
+home https://github.com/objectionary/eo-files
+junit
+package org.eolang.fs
+version 0.4.1

[] > makes-the-same-temp-file
  tmpdir.tmpfile > f!
  assert-that > @
    f
    $.equal-to
      f

[] > makes-new-directory
  tmpdir.tmpfile > f!
  dir > d
    f.resolve "new-dir"
  assert-that > @
    and.
      f.rm
      d.mkdir
      d.exists
      d.is-dir
    $.equal-to
      TRUE

[] > makes-new-directory-on-top-of-file
  tmpdir.tmpfile > f!
  dir f > d
  assert-that > @
    and.
      d.rm
      d.mkdir
      d.exists
      d.is-dir
    $.equal-to
      TRUE

[] > deletes-recursively
  tmpdir.tmpfile > f!
  dir f > d
  assert-that > @
    and.
      d.rm
      d.mkdir
      eq.
        copied
          bytes-as-input
            "Hello, world".as-bytes
          as-output.
            d.resolve "test.txt"
            "w"
          1024
        12
      d.rm-rf
      d.exists.not
    $.equal-to
      TRUE

[] > walks-recursively
  tmpdir.tmpfile > f!
  dir f > d
  seq > directory
    d.rm
    d.mkdir
    mkdir.
      dir
        d.resolve "foo/bar"
    (d.resolve "foo/bar/test.txt").touch
    mkdir.
      dir
        d.resolve "x/y/z"
    (d.resolve "x/y/z/a.txt").touch
    d
  assert-that > @
    length.
      directory.walk
        "**/*.txt"
    $.equal-to
      2
