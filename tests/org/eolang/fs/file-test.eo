# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.fs.file
+alias org.eolang.fs.tmpdir
+alias org.eolang.io.bytes-as-input
+alias org.eolang.io.copied
+alias org.eolang.txt.sprintf
+alias org.eolang.hamcrest.assert-that
+home https://github.com/objectionary/eo-files
+junit
+package org.eolang.fs
+version 0.4.1

[] > compares-to-same-file
  assert-that > @
    file "/tmp/foo.txt"
    $.equal-to
      file "/tmp/foo.txt"

[] > compares-to-another-file
  assert-that > @
    file "/tmp/foo.txt"
    $.not
      $.equal-to
        file "/tmp/bar.txt"

[] > check-if-it-is-directory
  assert-that > @
    is-dir.
      file
        "."
    $.equal-to
      TRUE

[] > check-if-file-exists
  assert-that > @
    not.
      exists.
        file
          "some-absent-file.txt"
    $.equal-to
      TRUE

[] > touches-a-file
  tmpdir.tmpfile > f!
  assert-that > @
    and.
      f.rm
      f.exists.not
      f.touch
      f.exists
    $.equal-to
      TRUE

[] > moves-a-file
  tmpdir.tmpfile.@ > src!
  file > dest
    sprintf
      "%s.dest"
      src
  assert-that > @
    seq
      src.touch
      src.mv dest
      dest.exists
      src.exists.not
    $.equal-to
      TRUE

[] > deletes-single-file-in-temp
  assert-that > @
    rm.
      tmpfile.
        tmpdir
    $.equal-to
      TRUE

[] > makes-the-same-temp-file
  tmpdir.tmpfile > f!
  assert-that > @
    f
    $.equal-to
      f

[] > writes-string-to-file
  tmpdir.tmpfile > f!
  assert-that > @
    copied
      bytes-as-input
        as-bytes.
          "你好, друг!"
      f.as-output "w+"
      4
    $.equal-to
      17

[] > measures-empty-file-size
  tmpdir.tmpfile > f!
  assert-that > @
    and.
      f.touch
      f.size.eq 0
    $.equal-to
      TRUE

[] > measures-file-size
  tmpdir.tmpfile > f!
  "hey!" > line
  nop > @
    assert-that
      copied
        bytes-as-input
          as-bytes.
            line
        f.as-output "w+"
        100
      $.equal-to
        f.size
