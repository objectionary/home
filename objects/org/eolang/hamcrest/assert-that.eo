# MIT License
#
# Copyright (c) 2022 Graur Andrew
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.collections.list
+alias org.eolang.hamcrest.matchers.all-of-matcher
+alias org.eolang.hamcrest.matchers.any-of-matcher
+alias org.eolang.hamcrest.matchers.anything-matcher
+alias org.eolang.hamcrest.matchers.array-each-matcher
+alias org.eolang.hamcrest.matchers.blank-string-matcher
+alias org.eolang.hamcrest.matchers.close-to-matcher
+alias org.eolang.hamcrest.matchers.contains-string-matcher
+alias org.eolang.hamcrest.matchers.described-as-matcher
+alias org.eolang.hamcrest.matchers.empty-string-matcher
+alias org.eolang.hamcrest.matchers.equal-to-matcher
+alias org.eolang.hamcrest.matchers.greater-than-matcher
+alias org.eolang.hamcrest.matchers.has-item-matcher
+alias org.eolang.hamcrest.matchers.has-items-matcher
+alias org.eolang.hamcrest.matchers.is-matcher
+alias org.eolang.hamcrest.matchers.is-substring-matcher
+alias org.eolang.hamcrest.matchers.less-than-matcher
+alias org.eolang.hamcrest.matchers.not-matcher
+alias org.eolang.hamcrest.matchers.matches-regex-matcher
+alias org.eolang.hamcrest.matchers.string-ends-with-matcher
+alias org.eolang.hamcrest.matchers.string-starts-with-matcher
+alias sprintf org.eolang.txt.sprintf
+home https://github.com/objectionary/eo-hamcrest
+package org.eolang.hamcrest
+rt jvm org.eolang:eo-hamcrest:0.3.2
+version 0.3.2

# Main object for assertions
[actual matcher reasons...] > assert-that
  actual > act!

  if. > @
    matcher.match act
    TRUE
    sprintf
      "%s\nExpected: %s\n     but: %s"
      if.
        is-empty.
          list
            reasons
        ""
        reasons.at 0
      description-of.
        matcher
      describe-mismatch.
        matcher
        act

  # Is the value equal to another value
  [x] > equal-to
    equal-to-matcher x > @

  # Calculates the logical negation of a matcher
  [matcher] > not
    not-matcher matcher > @

  # Calculates the logical conjunction of multiple matchers.
  # Evaluation is shortcut, so subsequent matchers are not called
  # if an earlier matcher returns false.
  [matchers...] > all-of
    all-of-matcher (...matchers) > @

  # Calculates the logical disjunction of multiple matchers.
  # Evaluation is shortcut, so subsequent matchers are not called
  # if an earlier matcher returns true.
  [matchers...] > any-of
    any-of-matcher (...matchers) > @

  # Compare object that matches when the examined object
  # is greater than the specified value
  [x] > greater-than
    greater-than-matcher x > @

  # Compare object that matches when the examined object
  # is less than the specified value
  [x] > less-than
    less-than-matcher x > @

  # Compare object that matches when an examined float
  # is equal to the specified operand, within a range of +/- error.
  [operand err] > close-to
    close-to-matcher > @
      operand
      err

  # Decorates another Matcher, retaining the behaviour
  # but allowing tests to be slightly more expressive.
  [matcher] > is
    is-matcher matcher > @

  # A matcher that always returns true.
  [] > anything
    anything-matcher > @

  # Wraps an existing matcher, overriding its description with that specified.
  # All other functions are delegated to the decorated matcher,
  # including its mismatch description.
  [matcher format args...] > described-as
    described-as-matcher > @
      matcher
      format
      ...args

  # Wraps an existing matcher and apply it to every item in array.
  [matcher] > has-item
    has-item-matcher matcher > @

  # Wraps an array of matchers and apply them to every item in array.
  [matchers...] > has-items
    has-items-matcher > @
      ...matchers

  # Matcher for array whose elements satisfy a sequence of matchers.
  # The array size must equal the number of element matchers.
  [matchers...] > array-each
    array-each-matcher > @
      ...matchers

  # Matcher that matches if the examined string contains the specified string anywhere.
  [str] > contains-string
    contains-string-matcher > @
      str

  # Tests if the argument is a string that ends with a specific substring.
  [str] > string-ends-with
    string-ends-with-matcher > @
      str

  # Tests if the argument is a string that starts with a specific substring.
  [str] > string-starts-with
    string-starts-with-matcher > @
      str

  # Tests if the argument can be generated by the given regular expression.
  [str] > matches-regex
    matches-regex-matcher > @
      str

  # Tests if the argument is a substring of the actual string.
  [str] > is-substring
    is-substring-matcher > @
      str

  # Tests if the examined string contains zero or more whitespace characters and nothing else.
  [] > blank-string
    blank-string-matcher > @

  # Tests if the examined string contains zero characters and nothing else.
  [] > empty-string
    empty-string-matcher > @
